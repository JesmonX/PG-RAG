Graph RAG是一种基于知识图谱的检索增强技术。通过构建图模型的知识表达，将实体和关系之间的联系用图的形式展示出来，然后利用大语言模型（LLM）进行检索增强。这种方法将知识图谱视为一个超大规模的词汇表，实体和关系则对应于单词，从而在检索时能够将实体和关系作为单元进行联合建模。
GraphRAG项目是微软团队的一项创新研究，旨在优化基于检索增强生成（RAG）的问答系统，尤其是针对整个文本语料库的全局性问题，如“数据集的主要主题是什么？”这种查询聚焦的总结任务。这种方法不仅适用于直接检索，还能应对大规模文本索引带来的挑战。

关键论文理论依据：《从局部到全局：一个基于图形的RAG方法用于查询聚焦的总结》

作者：Darren Edge, Ha Trinh, Newman Cheng, Joshua Bradley, Alex Chao, Apurva Mody, Steven Truitt, Jonathan Larson

所在机构：微软研究院、微软战略任务与技术部、微软首席技术官办公室

文中详细阐述了这一方案背后要解决的核心RAG准确率和传统图谱查询的问题：

传统的RAG方法在处理全局问题时表现不佳，例如询问整个文本数据集的主要主题。这类问题本质上是一种查询聚焦的总结任务（QFS），而现有的QFS方法无法扩展到典型RAG系统索引的大量文本中。因此，论文提出了一种结合两者优点的新方法，称为Graph RAG，以应对这一挑战。

使用检索增强生成 (RAG) 从外部知识源检索相关信息，使得大型语言模型 (LLM) 能够回答有 关私有和/或以前未见过的文档集合的问题。

然而，RAG 无法解决针对整个文本语料库的全局问题，例如“数据集中的主要主题是什么?”，因为这本质上是一个以查询为中心的摘要 (QFS) 任务，而不是明确的检索任务。

同时，之前的 QFS 方法 无法扩展到典型 RAG 系统索引的文本数量。

Graph RAG 的全局方法，结合了知识图谱生成，检索增强生成 (RAG) 和以查询为中心的摘要 (QFS)，以支持人类
在整个文本语料库上进行语义建构。初步评估显示，与朴素 RAG 基线既包括答案的全面性，也包括答案的多样性，以及有利的与使用 map‐reduce 源文本摘要的全局但无图方法进行比较。对于 在需要对同一数据集进行许多全局查询的情况下，基于实体的图形索引中的根级社区摘要提供了一种数据索引，它既优于 朴素 RAG，又以极低的token成本实现了与其他全局方法相媲美的性能。
何时使用 GraphRAG
它可以从检索前、检索后和即时压缩的角度解决上述 RAG 的一些局限性，考虑到知识图谱的检索和推理的背景。
图形检索专注于通过获取相关信息来增强上下文，而图形推理则适用于如何在 RAG 中遍历和搜索信息（例如分块和上下文输入）。
预检索可以利用知识图谱索引来获取相关文档。通过基于知识图谱中的节点和边对文档进行语义索引，它直接检索语义相关的文档。
该过程涉及考虑是否获取节点或子图。提取节点涉及将用户查询与分块节点进行比较以找到最相似的节点，并使用它们的连接路径作为查询语法。
然而，这种方法需要指定在路径中获取多少个节点，并且很大程度上依赖于用于创建知识图谱的信息提取模型，突出了模型性能的重要性。
此外，可变长度边 (VLE) 可用于获取相关信息，因此需要优化数据库以实现高效检索。数据库管理员和机器学习工程师参与的数据库设计和优化讨论对于提高性能至关重要。
子图涉及获取连接到相关节点的自我图，可能嵌入多个相关的自我图以将整体上下文与用户的查询进行比较。
由于所使用的嵌入技术不同，性能也存在差异，因此该方法需要进行各种图嵌入实验。
后检索涉及重新排序过程，该过程和谐地使用来自 RAG 和 GraphRAG 的值。通过利用来自 GraphRAG 的语义搜索值以及 RAG 的相似性搜索值，它可以生成上下文。GraphRAG 的值允许验证检索的语义基础，从而提高获取信息的准确性。
对 vectorDB 和 GraphDB 使用单个数据库允许在同一个数据库内进行语义（GraphRAG）和向量（RAG）索引，从而有助于验证检索准确性并改进不准确性。
提示压缩受益于提示工程期间的图形信息，例如决定将哪些块信息注入提示中。
图表可以根据查询上下文和文档之间的关系，在检索后仅返回相关信息。这样可以追踪不相关信息的来源，从而进行改进。
例如，如果产生了不适当的响应，则可以使用图形查询追溯到有问题的部分并立即纠正。
总体而言，GraphRAG 通过集成知识图谱技术来更好地检索信息、推理和生成上下文，从而提供了一种全面的方法来解决 RAG 的局限性，从而提高了生成的响应的准确性和相关性。